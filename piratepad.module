<?php
/**
 * @file
 * This module is developed for embedding EtherPads from piratepad.com.
 *
 */

/**
* implementation of hook_perm()
* 
*/
function piratepad_perm() {
  return array('administrator piratepad', 'view editable piratepad', 'view piratepad', 'create piratepad', 'delete own piratepad', 'delete any piratepad', 'edit any piratepad', 'edit own piratepad');
}

/**
* Implementation of hook_menu()
* 
*/
function piratepad_menu() {
  $items['node/%node/viewpad'] = array(
    'title' => t('View Read-only Pad'),
    'description' => t('View Read-Only Pad'),
    'page callback' => 'priatepad_readonly_version',
    'page arguments' => array(1),
    'access callback' => 'piratepad_viewpad_access',
    'access arguments' => array(1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'piratepad.module',
  );
  $items['admin/settings/piratepad'] = array(
    'title' => t('Piratepad settings'),
    'description' => t('Settings for piratepad'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('piratepad_settings'),
    'access arguments' => array('administrator piratepad'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'piratepad.module',
  );
  return $items; 
} 
/**
 * Implementation of hook_access().
 */
function piratepad_access($op, $node, $account) {
  switch ($op) {
    case 'create':
      return user_access('create piratepad', $account) ? TRUE : NULL;
    case 'update':
      return user_access('edit any piratepad', $account) || (user_access('edit own piratepad', $account) && ($node->uid == $account->uid)) ? TRUE : NULL;
    case 'delete':
      return user_access('delete any piratepad', $account) || (user_access('delete own piratepa', $account) && ($node->uid == $account->uid)) ? TRUE : NULL;
  }
}

/**
* Access to readonly piratepad
* @param mixed $node
*/
function piratepad_viewpad_access($node) {
  // if (!empty($node->piratepad_link) && user_access('view piratepad'))  {
  if (user_access('view piratepad'))  {	
    return TRUE; 
  } 
  else {
    return FALSE; 
  }
}

/**
* Implementation of hook_node_info().
*/
function piratepad_node_info() {
  return array(
    'piratepad' => array(
      'name' => t('EtherPad'),
      'module' => 'piratepad',
      'description' => t("Custom content type for embedding PiratePad EtherPads"),
      'has_title' => TRUE,
      'title_label' => t('Title'),
      'body_label' => t('Description'),
      'has_body' => TRUE,
    )
  );
}
/**
* Implementation of hook_form().
*/
function piratepad_form(&$node, $form_state) {
  $type = node_get_types('type', $node);
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->title_label),
    '#required' => TRUE,
    '#default_value' => $node->title,
    '#weight' => -5
  );
  $form['body'] = array(
    '#type' => 'textarea',
    '#title' => check_plain($type->body_label),
    '#default_value' => $node->body,
    '#required' => FALSE
  );
  $form['piratepad_id'] = array(
    '#type' => 'textfield',
    '#title' => t('Piratepad ID'),
    '#default_value' => $node->piratepad_id,
 	'#description' => t('Create Your Etherpad at <a href="@link" target="_blank">http://piratepad.net/ep/pad/newpad</a> and copy the etherpadID. For example, ABCDEDF from piratepad.net/ABCDEFG.', array('@link' => url('http://piratepad.net/ep/pad/newpad', array('absolute' => TRUE)))),
    '#required' => TRUE,
  );
  $form['piratepad_link'] = array(
    '#type' => 'textfield',
    '#title' => t('Piratepad Link'),
    '#default_value' => $node->piratepad_link,
    '#description' => t('Share link at piratepad.net/ABCDEFG after clicking (share this pad) button copy read only access paste this link here'),
  );
  return $form;
}
/**
 * Implementation of hook_load().
 */
function piratepad_load($node) {
  $piratepad = db_fetch_object(db_query("SELECT piratepad_id, piratepad_link FROM {piratepad} WHERE nid = %d", $node->nid));
  return $piratepad;
}
/**
* Implementation of hook_insert()
* 
* @param mixed $node
*/
function piratepad_insert($node) {
  db_query("INSERT INTO {piratepad} (nid, piratepad_id, piratepad_link) VALUES ('%d', '%s', '%s')", $node->nid, $node->piratepad_id, $node->piratepad_link);
}
/**
* Implementation of hook_update()
* 
* @param mixed $node
*/
function piratepad_update($node) {
  db_query("UPDATE {piratepad} SET piratepad_id = '%s', piratepad_link = '%s' WHERE nid = '%d'", $node->piratepad_id, $node->piratepad_link, $node->nid);
}
/**
* Implementation of hook_delete()
* 
* @param mixed $node
*/
function piratepad_delete($node) {
  db_query("DELETE FROM {piratepad} WHERE nid = %d", $node->nid);  
}
/**
 * Implementation of hook_view().
 *
 * @param $block
 */
function piratepad_view($node, $teaser = FALSE, $page = FALSE, $block = FALSE) {
  $node = node_prepare($node, $teaser);
  $node->content['data'] = array(
    '#value' => priatepad_viewdata($node), 
    '#weight' => 1,
  );
  return $node;
}
function priatepad_viewdata($node) {
  $piratepad_id = $node->piratepad_id; 
  $width = variable_get('piratepad_width', 900);
  $height = variable_get('piratepad_height', 600);
  $url =  'http://piratepad.net/OuQxM4X4mU?showControls=true&showChat=true&showLineNumbers=true&useMonospaceFont=false';
  $url_id = 'http://piratepad.net/OuQxM4X4mU';
  return theme_render_template(drupal_get_path('module', 'piratepad') . '/templates/embedded_piratepad.tpl.php', array('url' => $url, 'height' => $height, 'width' => $width, 'url_id' => $url_id)); 
}
/**
* View editable piratepad
* 
* @param mixed $node
*/
function priatepad_readonly_version($node) {
  $piratepad_link = $node->piratepad_link; 
  $width = variable_get('piratepad_width', 900);
  $height = variable_get('piratepad_height', 600);
  return theme_render_template(drupal_get_path('module', 'piratepad') . '/templates/readonly_piratepad.tpl.php', array('url' => $piratepad_link, 'height' => $height, 'width' => $width));
}
/**
* Settings for piratepad
* 
*/
function piratepad_settings(&$form_state) {
  $form['piratepad_width'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('piratepad_width', 900),
    '#title' => t('Width for piratepad.'),
    '#required' => TRUE,
  );
  $form['piratepad_height'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('piratepad_height', 600),
    '#title' => t('Height for piratepad.'),
    '#required' => TRUE, 
  );
  return system_settings_form($form);
}